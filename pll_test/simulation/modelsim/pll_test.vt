// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench template that is freely editable to  
// suit user's needs .Comments are provided in each section to help the user    
// fill out necessary details.                                                  
// *****************************************************************************
// Generated on "05/25/2017 12:12:49"
                                                                                
// Verilog Test Bench template for design : pll_test
// 
// Simulation tool : ModelSim (Verilog)
// 

`timescale 1 ns/ 1 ps
module pll_test_tb();
// constants                                           
// general purpose registers
//reg eachvec;
// test vector input registers
reg clk;
reg rst_n;
// wires                                               
wire clkout1;
wire clkout2;
wire clkout3;
wire clkout4;

// assign statements (if any)                          
pll_test i1 (
// port map - connection between master ports and signals/registers   
	.clk(clk),
	.clkout1(clkout1),
	.clkout2(clkout2),
	.clkout3(clkout3),
	.clkout4(clkout4),
	.rst_n(rst_n)
);
initial                                                
begin                                                  

clk=0;
rst_n=0;
#100;

rst_n=1;

#2000;
                                           
$display("Running testbench");                       
end   
                                                 
always   #10 clk=~clk;                                              
                                                 
endmodule

